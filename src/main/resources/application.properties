# Server Configuration
server.port=8080
spring.application.name=ov-recorder

# Redis Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# Security Configuration
app.security.username=${HA_CONTROLLER_USERNAME:recorder}
app.security.password=${HA_CONTROLLER_PASSWORD:rec0rd3r_2024!}


# Session Management Configuration
app.session.cleanup-interval=${APP_SESSION_CLEANUP_INTERVAL:30}
app.session.max-inactive-time=${APP_SESSION_MAX_INACTIVE_TIME:600}
app.session.heartbeat=${APP_SESSION_HEARTBEAT_INTERVAL:10}
app.failover.heartbeat-max-lost=${APP_FAILOVER_MAX_MISSED_HEARTBEATS:3}
app.failover.check-interval=${FAILOVER_CHECK_INTERVAL:15}
app.failover.chunk.time=${APP_FAILOVER_CHUNK_TIME:5}

# Logging Configuration
logging.level.com.naevatec.ovrecorder=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.data.redis=INFO

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Spring Profiles Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Swagger/OpenAPI Configuration (Profile-based)
# Only enabled in dev and test profiles, disabled in production
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}

# Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# API Documentation Configuration
app.api.title=OV Recorder HA Controller API
app.api.description=High Availability Controller for OpenVidu Substitute Recording Sessions
app.api.version=1.0.0
app.api.contact.name=Naevatec Development Team
app.api.contact.email=dev@naevatec.com

# Webhook Configuration
app.webhook.url=${APP_WEBHOOK_ENDPOINT:}
app.webhook.enabled=${APP_WEBHOOK_ENABLED:false}
app.webhook.headers=${APP_WEBHOOK_HEADERS:}
app.webhook.timeout-ms=${APP_WEBHOOK_TIMEOUT_MS:5000}
app.webhook.retries=${APP_WEBHOOK_RETRIES:3}
app.webhook.retry-delay-ms=${APP_WEBHOOK_RETRY_DELAY_MS:2000}



# Environment Configuration
app.recording.storage=${APP_RECORDING_TYPE:local}
app.recording.chunk.folder=${APP_RECORDING_CHUNK_FOLDER:/chunks}
app.aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:ov-recordings}
app.aws.s3.region=${AWS_S3_REGION:us-east-1}
app.aws.s3.access-key=${AWS_S3_ACCESS_KEY:naeva_minio}
app.aws.s3.secret-key=${AWS_S3_SECRET_KEY:N43v4t3c_M1n10}
app.aws.s3.service-endpoint=${AWS_S3_SERVICE_ENDPOINT:http://minio:9000}

# S3 Cleanup Configuration
app.s3.cleanup.enabled=${APP_S3_CLEANUP_ENABLED:true}
app.s3.cleanup.async=${APP_S3_CLEANUP_ASYNC:true}
app.s3.cleanup.batch-size=${APP_S3_CLEANUP_BATCH_SIZE:1000}

# Rercorder docker image
app.docker.image.name=${APP_RECORDER_DOCKER_IMAGE_NAME:openvidu/openvidu-recording}
app.docker.image.tag=${APP_RECORDER_DOCKER_IMAGE_TAG:2.31.0}
app.docker.socket-path:/var/run/docker.sock
