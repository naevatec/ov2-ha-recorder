# ------------------------------------------------------------------------------------------------------------------------------------------------
#
# ..#######..##.....##..#######..........##.....##....###............########..########..######...#######..########..########..########.########.
# .##.....##.##.....##.##.....##.........##.....##...##.##...........##.....##.##.......##....##.##.....##.##.....##.##.....##.##.......##.....##
# .##.....##.##.....##........##.........##.....##..##...##..........##.....##.##.......##.......##.....##.##.....##.##.....##.##.......##.....##
# .##.....##.##.....##..#######..#######.#########.##.....##.#######.########..######...##.......##.....##.########..##.....##.######...########.
# .##.....##..##...##..##................##.....##.#########.........##...##...##.......##.......##.....##.##...##...##.....##.##.......##...##..
# .##.....##...##.##...##................##.....##.##.....##.........##....##..##.......##....##.##.....##.##....##..##.....##.##.......##....##.
# ..#######.....###....#########.........##.....##.##.....##.........##.....##.########..######...#######..##.....##.########..########.##.....##
#
# OpenVidu2 HA Recorder configuration
# Documentation: https://github.com/naevatec/ov2-ha-recorder
# ------------------------------------------------------------------------------------------------------------------------------------------------


#######################################
###       GENERAL CONFIGURATION     ###
#######################################
# Where to store chunk recording files. Can be 'local' (local storage) or 's3' (AWS bucket).
# Recording can be stored locally (removed after finish) or in a S3 service
# You will need to define a HA_AWS_S3_BUCKET if you use it as s3.
# Values: local | s3
# Default value is local
HA_RECORDING_STORAGE=local

# The folder inside recording folder where chunks are stored
# Default value is /chunks
CHUNK_FOLDER=/local-chunks

# Duration of each chunk in seconds
# Default value is 10
CHUNK_TIME_SIZE=20

#######################################
###        BUCKET CONFIGURATION     ###
#######################################
# S3 compatible service where to store chunk recording files. If not include will use standard AWS S3 service.
# This property is only taken into account if HA_RECORDING_STORAGE=s3
# If the provided MinIO server is used, this property is the MINIO_API_HOST:MINIO_API_PORT
HA_AWS_S3_SERVICE_ENDPOINT=http://172.31.0.96:9000

# S3 Bucket where to store chunk recording files. May include paths to allow navigating
# folder structures inside the bucket. This property is only taken into account if HA_RECORDING_STORAGE=s3
# If the provided MinIO server is used, this property is the MINIO_DEFAULT_BUCKET
HA_AWS_S3_BUCKET=ov-recordings

# If HA_RECORDING_STORAGE=s3, the collection of HTTP header values that the internal AWS client  will use during
# the upload process. The property is a key-value map of strings, following the format of a JSON object. For example, for applying
# server-side encryption with AES-256, this header is mandatory: {"x-amz-server-side-encryption":"AES256"}.
# The list of available headers can be found here: https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/Headers.html
# This property is only taken into account if HA_RECORDING_STORAGE=s3
#HA_AWS_S3_HEADERS=

# This property applies to HA_RECORDING_STORAGE=s3.
# It is the AWS long-lived credentials access key. Must have read and write permissions 
# over the bucket defined in property HA_AWS_S3_BUCKET. In this case credentials are optional:
# if not provided the internal S3 client will try to use the default AWS credentials of the Master Node, if available
# If the provided MinIO server is used, this property is the MINIO_ROOT_USER
HA_AWS_ACCESS_KEY=naeva_minio

# This property applies to HA_RECORDING_STORAGE=s3.
# It is the AWS long-lived credentials secret key. In this case credentials are optional: 
# if not provided then the internal S3 client will try to use the default AWS credentials of the machine, if available.
# If the provided MinIO server is used, this property is the MINIO_ROOT_PASSWORD
HA_AWS_SECRET_KEY=N43v4t3c_M1n10

# This property applies to HA_RECORDING_STORAGE=s3. It is the AWS region hosting the services.
# AWS region in which the S3 bucket is located (e.g. "eu-west-1").
#  If not provided, the region will try to be discovered automatically, although this is not always possible.
# If the provided MinIO server is used, this property is ignored
#HA_AWS_REGION=
