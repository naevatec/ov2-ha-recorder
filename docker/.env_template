# ------------------------------------------------------------------------------------------------------------------------------------------------
#
# ..#######..##.....##..#######..........##.....##....###............########..########..######...#######..########..########..########.########.
# .##.....##.##.....##.##.....##.........##.....##...##.##...........##.....##.##.......##....##.##.....##.##.....##.##.....##.##.......##.....##
# .##.....##.##.....##........##.........##.....##..##...##..........##.....##.##.......##.......##.....##.##.....##.##.....##.##.......##.....##
# .##.....##.##.....##..#######..#######.#########.##.....##.#######.########..######...##.......##.....##.########..##.....##.######...########.
# .##.....##..##...##..##................##.....##.#########.........##...##...##.......##.......##.....##.##...##...##.....##.##.......##...##..
# .##.....##...##.##...##................##.....##.##.....##.........##....##..##.......##....##.##.....##.##....##..##.....##.##.......##....##.
# ..#######.....###....#########.........##.....##.##.....##.........##.....##.########..######...#######..##.....##.########..########.##.....##
#
# OpenVidu2 HA Recorder configuration
# Documentation: https://github.com/naevatec/ov2-ha-recorder
# ------------------------------------------------------------------------------------------------------------------------------------------------

#######################################
###       GENERAL CONFIGURATION     ###
#######################################

# Where to store chunk recording files. Can be 'local' (local storage) or 's3' (AWS bucket).
# Recording can be stored locally (removed after finish) or in a S3 service
# You will need to define a HA_AWS_S3_BUCKET if you use it as s3.
# Values: local | s3
# Default value is local
HA_RECORDING_STORAGE=s3

# The folder inside recording folder where chunks are stored
# Default value is /chunks
CHUNK_FOLDER=/chunks

# Duration of each chunk in seconds
# Default value is 10
CHUNK_TIME_SIZE=10

#######################################
###        BUCKET CONFIGURATION     ###
#######################################

# S3 compatible service where to store chunk recording files. If not include will use standard AWS S3 service.
# This property is only taken into account if HA_RECORDING_STORAGE=s3
# If the provided MinIO server is used, the port must be the one defined by the API port in docker compose
# and the host the PRIVATE IP
HA_AWS_S3_SERVICE_ENDPOINT=http://172.31.22.206:9000

# S3 Bucket where to store chunk recording files. May include paths to allow navigating
# folder structures inside the bucket. This property is only taken into account if HA_RECORDING_STORAGE=s3
HA_AWS_S3_BUCKET=ov-recordings

# If HA_RECORDING_STORAGE=s3, the collection of HTTP header values that the internal AWS client  will use during
# the upload process. The property is a key-value map of strings, following the format of a JSON object. For example, for applying
# server-side encryption with AES-256, this header is mandatory: {"x-amz-server-side-encryption":"AES256"}.
# The list of available headers can be found here: https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/Headers.html
# This property is only taken into account if HA_RECORDING_STORAGE=s3
#HA_AWS_S3_HEADERS=

# This property applies to HA_RECORDING_STORAGE=s3.
# It is the AWS long-lived credentials access key. Must have read and write permissions
# over the bucket defined in property HA_AWS_S3_BUCKET. In this case credentials are optional:
# if not provided the internal S3 client will try to use the default AWS credentials of the Master Node, if available
HA_AWS_ACCESS_KEY=naeva_minio

# This property applies to HA_RECORDING_STORAGE=s3.
# It is the AWS long-lived credentials secret key. In this case credentials are optional:
# if not provided then the internal S3 client will try to use the default AWS credentials of the machine, if available.
HA_AWS_SECRET_KEY=N43v4t3c_M1n10

# This property applies to HA_RECORDING_STORAGE=s3. It is the AWS region hosting the services.
# AWS region in which the S3 bucket is located (e.g. "eu-west-1").
# If not provided, the region will try to be discovered automatically, although this is not always possible.
# If the provided MinIO server is used, this property is ignored
#HA_AWS_REGION=

# This property applies to HA_RECORDING_STORAGE=s3 and a MinIO or similar service, not necessary fro AWS S3.
# It is port for the internal MinIO.
# WARNING: MUST COINCIDE WITH THE PORT DEFINED IN VARIABLE HA_AWS_S3_SERVICE_ENDPOINT
MINIO_API_PORT=9000

# This property applies to HA_RECORDING_STORAGE=s3 and a MinIO or similar service, not necessary fro AWS S3.
# MinIO Console Port (for web interface access)
# Default value is 9001
MINIO_CONSOLE_PORT=9001

#######################################
###  HA CONTROLLER CONFIGURATION    ###
#######################################

# Sets the host and port where the HA Controller Server will be available for API calls
# The host should be accessible from recording containers for session registration and heartbeats
# Use private IP or hostname that containers can reach
HA_CONTROLLER_HOST=172.31.22.206
HA_CONTROLLER_PORT=15443

# Sets the username and password for the HA Recorder
# These credentials are used for HTTP Basic Authentication on the HA Controller API endpoints
# Recording containers will use these credentials to register sessions and send heartbeats
HA_CONTROLLER_USERNAME=naeva_admin
HA_CONTROLLER_PASSWORD=N43v4t3c_M4n4g3r

# Intervals in seconds
# Heartbeat interval to notify the presence of a recorder node to the controller
# How often recording containers send heartbeat signals to the HA controller
# Default value is 30
HEARTBEAT_INTERVAL=10

# Interval in seconds to clean up old sessions
# How frequently the controller checks for and removes inactive sessions
# Default value is 30
HA_SESSION_CLEANUP_INTERVAL=30

# Interval in seconds to check the status of recorder nodes
# How often the failover system checks for failed recording sessions
# Lower values provide faster failover detection but increase system load
# Default value is 60
HA_FAILOVER_CHECK_INTERVAL=15

# Session maximum inactive time in seconds before being removed
# Sessions without heartbeats for this duration will be considered inactive and cleaned up
# Default value is 600 (10 minutes)
HA_SESSION_MAX_INACTIVE_TIME=600

# For Failover, the maximum heartbeats missed until consider the recorder node as down
# Number of consecutive missed heartbeats before triggering failover
# Total timeout = HEARTBEAT_INTERVAL * HA_MAX_MISSED_HEARTBEATS
# Default value is 3
HA_MAX_MISSED_HEARTBEATS=3

#########################################
###   WEBHOOK RELAY CONFIGURATION     ###
#########################################

# OpenVidu webhook relay headers (JSON format)
# Custom headers to send with relayed webhook requests
# Example: {"Authorization":"Bearer token123","X-Custom":"value"}
# Default value is empty (no custom headers)
#OPENVIDU_WEBHOOK_HEADERS={}

# Enable/disable OpenVidu webhook relay functionality
# When true, the controller will accept webhook notifications from OpenVidu
# and relay them to the configured endpoint
# Default value is false
OPENVIDU_WEBHOOK=true

# Target endpoint URL for webhook relay
# All incoming OpenVidu webhook notifications will be forwarded to this URL
# Must be a valid HTTP/HTTPS URL accessible from the HA controller
# Example: https://your-app.com/webhooks/openvidu
OPENVIDU_WEBHOOK_ENDPOINT=https://webhook.site/1d2b4f9a-7a3f-4ef1-8b2c-024905f97408

#########################################
###    DOCKER CONFIGURATION          ###
#########################################

# Docker image tag to use for OpenVidu recording image
# Specifies which version of the OpenVidu recording container to use
# Should match your OpenVidu server version for compatibility
# Default value is latest
IMAGE_TAG=2.31.0

# Docker image name for OpenVidu recording containers
# The base Docker image used for both primary and backup recording containers
# Default value is openvidu/openvidu-recording
IMAGE_NAME=openvidu/openvidu-recording

# Path inside containers where recordings are stored
# This path will be mounted as a volume in recording containers
# Must be accessible and have sufficient storage space
# Default value is /opt/openvidu/recordings
OPENVIDU_RECORDING_PATH=/opt/openvidu/recordings
